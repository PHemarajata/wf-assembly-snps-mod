#!/bin/bash
### ---
### name: 'RECOMBINATION_AWARE_SNPS:SNIPPY_ALIGN (cluster_cluster_2)'
### container: 'staphb/snippy:4.6.0'
### outputs:
### - 'cluster_2.core.full.aln'
### - 'cluster_2.core.tab'
### - 'versions.yml'
### ...
set -e
set -u
NXF_DEBUG=${NXF_DEBUG:=0}; [[ $NXF_DEBUG > 1 ]] && set -x
NXF_ENTRY=${1:-nxf_main}

nxf_tree() {
    local pid=$1

    declare -a ALL_CHILDREN
    while read P PP;do
        ALL_CHILDREN[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    pstat() {
        local x_pid=$1
        local STATUS=$(2> /dev/null < /proc/$1/status grep -E 'Vm|ctxt')

        if [ $? = 0 ]; then
        local  x_vsz=$(echo "$STATUS" | grep VmSize | awk '{print $2}' || echo -n '0')
        local  x_rss=$(echo "$STATUS" | grep VmRSS | awk '{print $2}' || echo -n '0')
        local x_peak=$(echo "$STATUS" | grep -E 'VmPeak|VmHWM' | sed 's/^.*:\s*//' | sed 's/[\sa-zA-Z]*$//' | tr '\n' ' ' || echo -n '0 0')
        local x_pmem=$(awk -v rss=$x_rss -v mem_tot=$mem_tot 'BEGIN {printf "%.0f", rss/mem_tot*100*10}' || echo -n '0')
        local vol_ctxt=$(echo "$STATUS" | grep '\bvoluntary_ctxt_switches' | awk '{print $2}' || echo -n '0')
        local inv_ctxt=$(echo "$STATUS" | grep '\bnonvoluntary_ctxt_switches' | awk '{print $2}' || echo -n '0')
        cpu_stat[x_pid]="$x_pid $x_pmem $x_vsz $x_rss $x_peak $vol_ctxt $inv_ctxt"
        fi
    }

    pwalk() {
        pstat $1
        for i in ${ALL_CHILDREN[$1]:=}; do pwalk $i; done
    }

    pwalk $1
}

nxf_stat() {
    cpu_stat=()
    nxf_tree $1

    declare -a sum=(0 0 0 0 0 0 0 0)
    local pid
    local i
    for pid in "${!cpu_stat[@]}"; do
        local row=(${cpu_stat[pid]})
        [ $NXF_DEBUG = 1 ] && echo "++ stat mem=${row[*]}"
        for i in "${!row[@]}"; do
        if [ $i != 0 ]; then
            sum[i]=$((sum[i]+row[i]))
        fi
        done
    done

    [ $NXF_DEBUG = 1 ] && echo -e "++ stat SUM=${sum[*]}"

    for i in {1..7}; do
        if [ ${sum[i]} -lt ${cpu_peak[i]} ]; then
            sum[i]=${cpu_peak[i]}
        else
            cpu_peak[i]=${sum[i]}
        fi
    done

    [ $NXF_DEBUG = 1 ] && echo -e "++ stat PEAK=${sum[*]}\n"
    nxf_stat_ret=(${sum[*]})
}

nxf_mem_watch() {
    set -o pipefail
    local pid=$1
    local trace_file=.command.trace
    local count=0;
    declare -a cpu_stat=(0 0 0 0 0 0 0 0)
    declare -a cpu_peak=(0 0 0 0 0 0 0 0)
    local mem_tot=$(< /proc/meminfo grep MemTotal | awk '{print $2}')
    local timeout
    local DONE
    local STOP=''

    [ $NXF_DEBUG = 1 ] && nxf_sleep 0.2 && ps fx

    while true; do
        nxf_stat $pid
        if [ $count -lt 10 ]; then timeout=1;
        elif [ $count -lt 120 ]; then timeout=5;
        else timeout=30;
        fi
        read -t $timeout -r DONE || true
        [[ $DONE ]] && break
        if [ ! -e /proc/$pid ]; then
            [ ! $STOP ] && STOP=$(nxf_date)
            [ $(($(nxf_date)-STOP)) -gt 10000 ] && break
        fi
        count=$((count+1))
    done

    echo "%mem=${nxf_stat_ret[1]}"      >> $trace_file
    echo "vmem=${nxf_stat_ret[2]}"      >> $trace_file
    echo "rss=${nxf_stat_ret[3]}"       >> $trace_file
    echo "peak_vmem=${nxf_stat_ret[4]}" >> $trace_file
    echo "peak_rss=${nxf_stat_ret[5]}"  >> $trace_file
    echo "vol_ctxt=${nxf_stat_ret[6]}"  >> $trace_file
    echo "inv_ctxt=${nxf_stat_ret[7]}"  >> $trace_file
}

nxf_write_trace() {
    echo "nextflow.trace/v2"           > $trace_file
    echo "realtime=$wall_time"         >> $trace_file
    echo "%cpu=$ucpu"                  >> $trace_file
    echo "cpu_model=$cpu_model"        >> $trace_file
    echo "rchar=${io_stat1[0]}"        >> $trace_file
    echo "wchar=${io_stat1[1]}"        >> $trace_file
    echo "syscr=${io_stat1[2]}"        >> $trace_file
    echo "syscw=${io_stat1[3]}"        >> $trace_file
    echo "read_bytes=${io_stat1[4]}"   >> $trace_file
    echo "write_bytes=${io_stat1[5]}"  >> $trace_file
}

nxf_trace_mac() {
    local start_millis=$(nxf_date)

    /bin/bash -euo pipefail /home/cdcadmin/wf-assembly-snps-mod/work/3f/decd4a6f8e5f61daed0fc8bd5f2633/.command.sh

    local end_millis=$(nxf_date)
    local wall_time=$((end_millis-start_millis))
    local ucpu=''
    local cpu_model=''
    local io_stat1=('' '' '' '' '' '')
    nxf_write_trace
}

nxf_fd() {
    local FD=11
    while [ -e /proc/$$/fd/$FD ]; do FD=$((FD+1)); done
    echo $FD
}

nxf_trace_linux() {
    local pid=$$
    command -v ps &>/dev/null || { >&2 echo "Command 'ps' required by nextflow to collect task metrics cannot be found"; exit 1; }
    local num_cpus=$(< /proc/cpuinfo grep '^processor' -c)
    local cpu_model=$(< /proc/cpuinfo grep '^model name' | head -n 1 | awk 'BEGIN{FS="\t: "} { print $2 }')
    local tot_time0=$(grep '^cpu ' /proc/stat | awk '{sum=$2+$3+$4+$5+$6+$7+$8+$9; printf "%.0f",sum}')
    local cpu_time0=$(2> /dev/null < /proc/$pid/stat awk '{printf "%.0f", ($16+$17)*10 }' || echo -n 'X')
    local io_stat0=($(2> /dev/null < /proc/$pid/io sed 's/^.*:\s*//' | head -n 6 | tr '\n' ' ' || echo -n '0 0 0 0 0 0'))
    local start_millis=$(nxf_date)
    trap 'kill $mem_proc' ERR
    
    /bin/bash -euo pipefail /home/cdcadmin/wf-assembly-snps-mod/work/3f/decd4a6f8e5f61daed0fc8bd5f2633/.command.sh &
    local task=$!

    mem_fd=$(nxf_fd)
    eval "exec $mem_fd> >(nxf_mem_watch $task)"
    local mem_proc=$!

    wait $task

    local end_millis=$(nxf_date)
    local tot_time1=$(grep '^cpu ' /proc/stat | awk '{sum=$2+$3+$4+$5+$6+$7+$8+$9; printf "%.0f",sum}')
    local cpu_time1=$(2> /dev/null < /proc/$pid/stat awk '{printf "%.0f", ($16+$17)*10 }' || echo -n 'X')
    local ucpu=$(awk -v p1=$cpu_time1 -v p0=$cpu_time0 -v t1=$tot_time1 -v t0=$tot_time0 -v n=$num_cpus 'BEGIN { pct=(p1-p0)/(t1-t0)*100*n; printf("%.0f", pct>0 ? pct : 0) }' )

    local io_stat1=($(2> /dev/null < /proc/$pid/io sed 's/^.*:\s*//' | head -n 6 | tr '\n' ' ' || echo -n '0 0 0 0 0 0'))
    local i
    for i in {0..5}; do
        io_stat1[i]=$((io_stat1[i]-io_stat0[i]))
    done

    local wall_time=$((end_millis-start_millis))
    [ $NXF_DEBUG = 1 ] && echo "+++ STATS %CPU=$ucpu TIME=$wall_time I/O=${io_stat1[*]}"

    echo "nextflow.trace/v2"           > $trace_file
    echo "realtime=$wall_time"         >> $trace_file
    echo "%cpu=$ucpu"                  >> $trace_file
    echo "cpu_model=$cpu_model"        >> $trace_file
    echo "rchar=${io_stat1[0]}"        >> $trace_file
    echo "wchar=${io_stat1[1]}"        >> $trace_file
    echo "syscr=${io_stat1[2]}"        >> $trace_file
    echo "syscw=${io_stat1[3]}"        >> $trace_file
    echo "read_bytes=${io_stat1[4]}"   >> $trace_file
    echo "write_bytes=${io_stat1[5]}"  >> $trace_file

    [ -e /proc/$mem_proc ] && eval "echo 'DONE' >&$mem_fd" || true
    wait $mem_proc 2>/dev/null || true
    while [ -e /proc/$mem_proc ]; do nxf_sleep 0.1; done
}

nxf_trace() {
    local trace_file=.command.trace
    touch $trace_file
    if [[ $(uname) = Darwin ]]; then
        nxf_trace_mac
    else
        nxf_trace_linux
    fi
}
nxf_container_env() {
cat << EOF
export PYTHONNOUSERSITE="1"
export R_PROFILE_USER="/.Rprofile"
export R_ENVIRON_USER="/.Renviron"
export JULIA_DEPOT_PATH="/usr/local/share/julia"
export PATH="\$PATH:/home/cdcadmin/wf-assembly-snps-mod/bin"
EOF
}

nxf_sleep() {
  sleep $1 2>/dev/null || sleep 1;
}

nxf_date() {
    local ts=$(date +%s%3N);
    if [[ ${#ts} == 10 ]]; then echo ${ts}000
    elif [[ $ts == *%3N ]]; then echo ${ts/\%3N/000}
    elif [[ $ts == *3N ]]; then echo ${ts/3N/000}
    elif [[ ${#ts} == 13 ]]; then echo $ts
    else echo "Unexpected timestamp value: $ts"; exit 1
    fi
}

nxf_env() {
    echo '============= task environment ============='
    env | sort | sed "s/\(.*\)AWS\(.*\)=\(.\{6\}\).*/\1AWS\2=\3xxxxxxxxxxxxx/"
    echo '============= task output =================='
}

nxf_kill() {
    declare -a children
    while read P PP;do
        children[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    kill_all() {
        [[ $1 != $$ ]] && kill $1 2>/dev/null || true
        for i in ${children[$1]:=}; do kill_all $i; done
    }

    kill_all $1
}

nxf_mktemp() {
    local base=${1:-/tmp}
    mkdir -p "$base"
    if [[ $(uname) = Darwin ]]; then mktemp -d $base/nxf.XXXXXXXXXX
    else TMPDIR="$base" mktemp -d -t nxf.XXXXXXXXXX
    fi
}

nxf_fs_copy() {
  local source=$1
  local target=$2
  local basedir=$(dirname $1)
  mkdir -p $target/$basedir
  cp -fRL $source $target/$basedir
}

nxf_fs_move() {
  local source=$1
  local target=$2
  local basedir=$(dirname $1)
  mkdir -p $target/$basedir
  mv -f $source $target/$basedir
}

nxf_fs_rsync() {
  rsync -rRl $1 $2
}

nxf_fs_rclone() {
  rclone copyto $1 $2/$1
}

nxf_fs_fcp() {
  fcp $1 $2/$1
}

on_exit() {
    exit_status=${nxf_main_ret:=$?}
    printf -- $exit_status > /home/cdcadmin/wf-assembly-snps-mod/work/3f/decd4a6f8e5f61daed0fc8bd5f2633/.exitcode
    set +u
    docker rm $NXF_BOXID &>/dev/null || true
    exit $exit_status
}

on_term() {
    set +e
    docker stop $NXF_BOXID
}

nxf_launch() {
    docker run -i --cpu-shares 16384 --memory 65536m -e "NXF_TASK_WORKDIR" -e "NXF_DEBUG=${NXF_DEBUG:=0}" -v /home/cdcadmin/wf-assembly-snps-mod:/home/cdcadmin/wf-assembly-snps-mod -w "$NXF_TASK_WORKDIR" --name $NXF_BOXID staphb/snippy:4.6.0 /bin/bash -c "eval $(nxf_container_env); /bin/bash /home/cdcadmin/wf-assembly-snps-mod/work/3f/decd4a6f8e5f61daed0fc8bd5f2633/.command.run nxf_trace"
}

nxf_stage() {
    true
    # stage input files
    rm -f IE-0017_S11_L001-SPAdes.fasta
    rm -f IP-0001-8_S1_L001-SPAdes.fasta
    rm -f IP-0003-4_S3_L001-SPAdes.fasta
    rm -f IP-0018-2_S9_L001-SPAdes.fasta
    rm -f IE-0014_S8_L001-SPAdes.fasta
    rm -f IP-0030-7_S10_L001-SPAdes.fa
    rm -f IP-0009-1_S9_L001-SPAdes.fasta
    rm -f IP-0012-5_S3_L001-SPAdes.fasta
    rm -f IP-0023-2_S3_L001-SPAdes.fasta
    rm -f IE-0004_S9_L001-SPAdes.fasta
    rm -f IP-0030-7_S10_L001-SPAdes.fasta
    rm -f IE-0009_S3_L001-SPAdes.fasta
    rm -f IE-0019_S5-SPAdes.fasta
    rm -f IP-0026-5_S6_L001-SPAdes.fasta
    rm -f IE-0006_S11_L001-SPAdes.fasta
    rm -f IP-0010-9_S10_L001-SPAdes.fasta
    rm -f IE-0003_S8_L001-SPAdes.fasta
    rm -f IP-0028-1_S8_L001-SPAdes.fasta
    rm -f IP-0027-3_S7_L001-SPAdes.fasta
    rm -f IE-0012_S6_L001-SPAdes.fasta
    rm -f IE-0018_S12_L001-SPAdes.fasta
    rm -f IP-0020-8_S11_L001-SPAdes.fasta
    rm -f IP-0013-3_S4_L001-SPAdes.fasta
    rm -f IP-0022-4_S2_L001-SPAdes.fasta
    rm -f IP-0014-1_S5_L001-SPAdes.fasta
    rm -f IP-0021-6_S1_L001-SPAdes.fasta
    rm -f IE-0011_S5_L001-SPAdes.fasta
    rm -f IE-0005_S10_L001-SPAdes.fasta
    rm -f IP-0002-6_S2_L001-SPAdes.fasta
    rm -f IE-0026_S8-SPAdes.fasta
    rm -f IP-0004-2_S4_L001-SPAdes.fasta
    rm -f IE-0010_S4_L001-SPAdes.fasta
    rm -f IE-0021_S7-SPAdes.fasta
    rm -f IP-0019-0_S10_L001-SPAdes.fasta
    rm -f IP-0011-7_S2_L001-SPAdes.fasta
    rm -f IP-0024-0_S4_L001-SPAdes.fasta
    rm -f IP-0025-7_S5_L001-SPAdes.fasta
    rm -f IP-0029-9_S9_L001-SPAdes.fasta
    rm -f IE-0013_S7_L001-SPAdes.fasta
    rm -f IE-0022_S8-SPAdes.fasta
    rm -f IE-0016_S10_L001-SPAdes.fasta
    rm -f IP-0006-7_S6_L001-SPAdes.fasta
    rm -f IP-0007-5_S7_L001-SPAdes.fasta
    rm -f IP-0008-3_S8_L001-SPAdes.fasta
    rm -f IP-0005-9_S5_L001-SPAdes.fasta
    rm -f IP-0016-6_S7_L001-SPAdes.fasta
    rm -f IE-0007_S1_L001-SPAdes.fasta
    rm -f IP-0017-4_S8_L001-SPAdes.fasta
    rm -f IE-0015_S9_L001-SPAdes.fasta
    rm -f IE-0024_S10-SPAdes.fasta
    rm -f IP-0015-8_S6_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/8c/480cbea9e5b87fc6cdb51480a12631/inputfiles/IE-0017_S11_L001-SPAdes.fasta IE-0017_S11_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/82/9a94c67f9d2cff0a1da32f6466f091/inputfiles/IP-0001-8_S1_L001-SPAdes.fasta IP-0001-8_S1_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/2d/0e0af9f129ecc47deb047870c56812/inputfiles/IP-0003-4_S3_L001-SPAdes.fasta IP-0003-4_S3_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/05/0b2fa1d981220231323db8d7157441/inputfiles/IP-0018-2_S9_L001-SPAdes.fasta IP-0018-2_S9_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/8b/5bccd941c217f11cd3c953234dcf59/inputfiles/IE-0014_S8_L001-SPAdes.fasta IE-0014_S8_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/73/b0327fbf73b6cd89fc5ddc3daa9725/IP-0030-7_S10_L001-SPAdes.fa IP-0030-7_S10_L001-SPAdes.fa
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/01/4eb0fda51b0cdad28747ccc22c3f7f/inputfiles/IP-0009-1_S9_L001-SPAdes.fasta IP-0009-1_S9_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/de/3e99bb9ed45aca73e87e411e9cfc5a/inputfiles/IP-0012-5_S3_L001-SPAdes.fasta IP-0012-5_S3_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/ad/a114a009df91fd292412f29d80a4c1/inputfiles/IP-0023-2_S3_L001-SPAdes.fasta IP-0023-2_S3_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/03/101f184375082e36b7d2debc399801/inputfiles/IE-0004_S9_L001-SPAdes.fasta IE-0004_S9_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/e8/8d0c1212e52343903f8ecfa2054429/inputfiles/IP-0030-7_S10_L001-SPAdes.fasta IP-0030-7_S10_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/76/798334dd5986a57f9bc7394c67ee5f/inputfiles/IE-0009_S3_L001-SPAdes.fasta IE-0009_S3_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/2e/4ff4419d22b7710040ed068667bc51/inputfiles/IE-0019_S5-SPAdes.fasta IE-0019_S5-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/54/6b713d197fc1420b67040d74947dbf/inputfiles/IP-0026-5_S6_L001-SPAdes.fasta IP-0026-5_S6_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/d2/805c89c1c884e9f5729233fbc6037c/inputfiles/IE-0006_S11_L001-SPAdes.fasta IE-0006_S11_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/0e/e676086405e2f38e5266f6ad469e95/inputfiles/IP-0010-9_S10_L001-SPAdes.fasta IP-0010-9_S10_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/9f/3d95f3d92e971278d315e4dd354996/inputfiles/IE-0003_S8_L001-SPAdes.fasta IE-0003_S8_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/c3/475032286e70ad7d2cddc1d21640d3/inputfiles/IP-0028-1_S8_L001-SPAdes.fasta IP-0028-1_S8_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/cc/1b36bf19b948b098a126e80a3acf52/inputfiles/IP-0027-3_S7_L001-SPAdes.fasta IP-0027-3_S7_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/01/60826b649c049a49d1e18d49e4f6ee/inputfiles/IE-0012_S6_L001-SPAdes.fasta IE-0012_S6_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/f2/02fb828ac9599db89208dbb0398577/inputfiles/IE-0018_S12_L001-SPAdes.fasta IE-0018_S12_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/98/018617d97cb20053c191501b42e5c0/inputfiles/IP-0020-8_S11_L001-SPAdes.fasta IP-0020-8_S11_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/30/94a13715ce0fb3736ebe565887b6df/inputfiles/IP-0013-3_S4_L001-SPAdes.fasta IP-0013-3_S4_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/07/38efd7d1beafcd5b2875b8e9cd3550/inputfiles/IP-0022-4_S2_L001-SPAdes.fasta IP-0022-4_S2_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/6a/0c7e4ec0de21311621601aeb66f1f1/inputfiles/IP-0014-1_S5_L001-SPAdes.fasta IP-0014-1_S5_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/37/38c6edb81c673ca15eafb83af5eb40/inputfiles/IP-0021-6_S1_L001-SPAdes.fasta IP-0021-6_S1_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/cb/b2c8122b89b4c1316cb700f24ae652/inputfiles/IE-0011_S5_L001-SPAdes.fasta IE-0011_S5_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/86/4c885ce3e4f7a05195c36183deab89/inputfiles/IE-0005_S10_L001-SPAdes.fasta IE-0005_S10_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/7d/6a75d64022a9d3f89507c3d39242b1/inputfiles/IP-0002-6_S2_L001-SPAdes.fasta IP-0002-6_S2_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/ae/ab87b34346c0c4a72708ad2ef0f9ca/inputfiles/IE-0026_S8-SPAdes.fasta IE-0026_S8-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/3d/8f5de40b4dbb1071498cc0398a4316/inputfiles/IP-0004-2_S4_L001-SPAdes.fasta IP-0004-2_S4_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/8b/568b3d1e231050182e775377629ae1/inputfiles/IE-0010_S4_L001-SPAdes.fasta IE-0010_S4_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/4b/dc171354f051d8b0ae1641e943a7e9/inputfiles/IE-0021_S7-SPAdes.fasta IE-0021_S7-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/ae/ffc0496754d720fd65e57f80bfd302/inputfiles/IP-0019-0_S10_L001-SPAdes.fasta IP-0019-0_S10_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/72/0fa4c65b5d50f1fda75f4db0bef824/inputfiles/IP-0011-7_S2_L001-SPAdes.fasta IP-0011-7_S2_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/11/3249c3fba89a4e5ead4804c843c93b/inputfiles/IP-0024-0_S4_L001-SPAdes.fasta IP-0024-0_S4_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/2a/311e50a7550cd2e10acdef5a2a54ff/inputfiles/IP-0025-7_S5_L001-SPAdes.fasta IP-0025-7_S5_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/92/9b434f875dfd585233f8c01dee01ca/inputfiles/IP-0029-9_S9_L001-SPAdes.fasta IP-0029-9_S9_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/24/0c39446a042dfc5629f94419c3ff1d/inputfiles/IE-0013_S7_L001-SPAdes.fasta IE-0013_S7_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/cb/84fcfc41fc49d4487d08c003cd274f/inputfiles/IE-0022_S8-SPAdes.fasta IE-0022_S8-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/a1/dedb4b13fa2a324e471e2c2fa7b0cb/inputfiles/IE-0016_S10_L001-SPAdes.fasta IE-0016_S10_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/fb/0cfc61a92cc6239356034de3910d84/inputfiles/IP-0006-7_S6_L001-SPAdes.fasta IP-0006-7_S6_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/b8/51643c847df97a47fc46d2baf69085/inputfiles/IP-0007-5_S7_L001-SPAdes.fasta IP-0007-5_S7_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/67/1659a30f001048200f4940a91a1205/inputfiles/IP-0008-3_S8_L001-SPAdes.fasta IP-0008-3_S8_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/b8/7e74716e8ab7c3e2b458e0be461006/inputfiles/IP-0005-9_S5_L001-SPAdes.fasta IP-0005-9_S5_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/23/97a4e7b2a03330b5e53585c97c42d1/inputfiles/IP-0016-6_S7_L001-SPAdes.fasta IP-0016-6_S7_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/7b/b4b0c48c68d6f8475b6f07212ddb0e/inputfiles/IE-0007_S1_L001-SPAdes.fasta IE-0007_S1_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/8e/4ee00781df8673370f9d5a6343faf3/inputfiles/IP-0017-4_S8_L001-SPAdes.fasta IP-0017-4_S8_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/38/729fe8dfa40e32903d2c783a3ac201/inputfiles/IE-0015_S9_L001-SPAdes.fasta IE-0015_S9_L001-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/35/c984f3b75426f0c313cbad2ab49914/inputfiles/IE-0024_S10-SPAdes.fasta IE-0024_S10-SPAdes.fasta
    ln -s /home/cdcadmin/wf-assembly-snps-mod/work/d9/bcb4f9be4a01ddb794c1c69be4a9d5/inputfiles/IP-0015-8_S6_L001-SPAdes.fasta IP-0015-8_S6_L001-SPAdes.fasta
}

nxf_unstage() {
    true
    [[ ${nxf_main_ret:=0} != 0 ]] && return
}

nxf_main() {
    trap on_exit EXIT
    trap on_term TERM INT USR2
    trap '' USR1

    [[ "${NXF_CHDIR:-}" ]] && cd "$NXF_CHDIR"
    export NXF_BOXID="nxf-$(dd bs=18 count=1 if=/dev/urandom 2>/dev/null | base64 | tr +/ 0A | tr -d '\r\n')"
    NXF_SCRATCH=''
    [[ $NXF_DEBUG > 0 ]] && nxf_env
    touch /home/cdcadmin/wf-assembly-snps-mod/work/3f/decd4a6f8e5f61daed0fc8bd5f2633/.command.begin
    set +u
    set -u
    [[ $NXF_SCRATCH ]] && cd $NXF_SCRATCH
    export NXF_TASK_WORKDIR="$PWD"
    nxf_stage

    set +e
    (set -o pipefail; (nxf_launch | tee .command.out) 3>&1 1>&2 2>&3 | tee .command.err) &
    pid=$!
    wait $pid || nxf_main_ret=$?
    nxf_unstage
}

$NXF_ENTRY
